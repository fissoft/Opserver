@using StackExchange.Opserver.Data.SQL
@using StackExchange.Opserver.Views.SQL
@model DashboardModel
@{
    Layout = "~/Views/Shared/Master.cshtml";
    this.SetPageTitle("SQL Dashboard");
    this.SetTopNodes(SQLInstance.AllInstances, "SQL", Model.CurrentInstance, Model.View == SQLViews.Servers ? "/sql/instance" : null);
}
@helper TabLink(SQLViews view, string href, string name, bool includeParams = true)
{
    <a class="@(Model.View == view ? "selected" : "")" href="@href@(includeParams && Model.CurrentInstance != null ? "?node=" + Model.CurrentInstance.Name : "")">@name</a>
}
@section head {
    <script>
        $(function() {
            Status.Dashboard.init({ refresh: @(Model.Refresh) });
            Status.SQL.init({ node: '@(Model.CurrentInstance != null ? Model.CurrentInstance.Name : "")' });
        });
    </script>
}
    <div class="tabs sub-tabs">
        <div class="tabs-links">
            @TabLink(SQLViews.Servers, "/sql/servers", "所有服务器", false)
            @TabLink(SQLViews.Instance, "/sql/instance", "实例")
            @TabLink(SQLViews.Top, "/sql/top", "大SQL")
            @TabLink(SQLViews.Active, "/sql/active", "active")
            @TabLink(SQLViews.Connections, "/sql/connections", "连接")
            @TabLink(SQLViews.Databases, "/sql/databases", "数据库")
        </div>
    </div>
<div class="dashboard-list">
    @if (Model.View != SQLViews.Servers && Model.CurrentInstance == null)
    {
        @Html.Partial("Instance.Selector")
    }
    @RenderBody()
</div>